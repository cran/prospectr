// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// bitAND
int bitAND(int aa, int bb);
RcppExport SEXP prospectr_bitAND(SEXP aaSEXP, SEXP bbSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< int >::type aa(aaSEXP );
        Rcpp::traits::input_parameter< int >::type bb(bbSEXP );
        int __result = bitAND(aa, bb);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// bitSR
int bitSR(int a, int b);
RcppExport SEXP prospectr_bitSR(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< int >::type a(aSEXP );
        Rcpp::traits::input_parameter< int >::type b(bSEXP );
        int __result = bitSR(a, b);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// convCppM
NumericMatrix convCppM(NumericMatrix X, NumericVector f);
RcppExport SEXP prospectr_convCppM(SEXP XSEXP, SEXP fSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type f(fSEXP );
        NumericMatrix __result = convCppM(X, f);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// convCppV
NumericVector convCppV(NumericVector X, NumericVector f);
RcppExport SEXP prospectr_convCppV(SEXP XSEXP, SEXP fSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type f(fSEXP );
        NumericVector __result = convCppV(X, f);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// fastDist
arma::mat fastDist(NumericMatrix X, NumericMatrix Y, String method);
RcppExport SEXP prospectr_fastDist(SEXP XSEXP, SEXP YSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type Y(YSEXP );
        Rcpp::traits::input_parameter< String >::type method(methodSEXP );
        arma::mat __result = fastDist(X, Y, method);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// fastDistV
NumericVector fastDistV(NumericMatrix X, NumericVector Y, String method);
RcppExport SEXP prospectr_fastDistV(SEXP XSEXP, SEXP YSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP );
        Rcpp::traits::input_parameter< String >::type method(methodSEXP );
        NumericVector __result = fastDistV(X, Y, method);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ResampleCppM
NumericMatrix ResampleCppM(NumericMatrix X, NumericVector wav, NumericVector new_wav, NumericVector fwhm);
RcppExport SEXP prospectr_ResampleCppM(SEXP XSEXP, SEXP wavSEXP, SEXP new_wavSEXP, SEXP fwhmSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type wav(wavSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type new_wav(new_wavSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type fwhm(fwhmSEXP );
        NumericMatrix __result = ResampleCppM(X, wav, new_wav, fwhm);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ResampleCppV
NumericVector ResampleCppV(NumericVector X, NumericVector wav, NumericVector new_wav, NumericVector fwhm);
RcppExport SEXP prospectr_ResampleCppV(SEXP XSEXP, SEXP wavSEXP, SEXP new_wavSEXP, SEXP fwhmSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type wav(wavSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type new_wav(new_wavSEXP );
        Rcpp::traits::input_parameter< NumericVector >::type fwhm(fwhmSEXP );
        NumericVector __result = ResampleCppV(X, wav, new_wav, fwhm);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// residLm
NumericMatrix residLm(NumericMatrix Yr, NumericMatrix Xr);
RcppExport SEXP prospectr_residLm(SEXP YrSEXP, SEXP XrSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericMatrix >::type Yr(YrSEXP );
        Rcpp::traits::input_parameter< NumericMatrix >::type Xr(XrSEXP );
        NumericMatrix __result = residLm(Yr, Xr);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
